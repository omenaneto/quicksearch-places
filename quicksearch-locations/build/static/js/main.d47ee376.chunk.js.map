{"version":3,"sources":["components/Card.js","components/CardList.js","SearchBox.js","places.js","containers/App.js","serviceWorker.js","index.js"],"names":["Card","id","url","city","country","description","className","style","backgroundImage","CardList","cardsArray","places","map","place","i","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","App","searchText","e","setState","target","value","state","searchedPlaces","this","filter","toLowerCase","includes","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yQAkBeA,EAhBF,SAAC,GAA4C,EAA1CC,GAA2C,IAAvCC,EAAsC,EAAtCA,IAAKC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,YAGvC,OACC,yBAAKC,UAAU,WAAWC,MAAO,CAAEC,gBAAgB,OAAD,OAASN,EAAT,OAEjD,6BACC,4BACEC,EADF,KACUC,GAEV,2BAAIC,MCQOI,EAjBE,SAAC,GAAgB,IAC3BC,EAD0B,EAAbC,OACOC,IAAI,SAACC,EAAOC,GACrC,OACC,kBAAC,EAAD,CACCC,IAAKF,EAAMZ,GACXC,IAAKW,EAAMX,IACXD,GAAIY,EAAMZ,GACVE,KAAMU,EAAMV,KACZC,QAASS,EAAMT,QACfC,YAAaQ,EAAMR,gBAKtB,OAAO,yBAAKC,UAAU,eAAeI,ICPvBM,EARG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aACjC,OACC,yBAAKZ,UAAU,gBACd,sDACA,2BAAOa,KAAK,SAASC,YAAY,SAASC,SAAUH,MCN1CP,EAAS,CACrB,CACCV,GAAc,EACdE,KAAc,eACdC,QAAc,SACdC,YAAc,mCACdH,IACC,4GAEF,CACCD,GAAc,EACdE,KAAc,SACdC,QAAc,UACdC,YAAc,uCACdH,IACC,sIAEF,CACCD,GAAc,EACdE,KAAc,UACdC,QAAc,QACdC,YAAc,2BACdH,IAAc,iFAEf,CACCD,GAAc,EACdE,KAAc,SACdC,QAAc,QACdC,YAAc,yCACdH,IAAc,+EAEf,CACCD,GAAc,EACdE,KAAc,QACdC,QAAc,gBACdC,YAAc,qCACdH,IACC,kIAEF,CACCD,GAAc,EACdE,KAAc,WACdC,QAAc,gBACdC,YAAc,gCACdH,IAAc,6EAEf,CACCD,GAAc,EACdE,KAAc,SACdC,QAAc,gBACdC,YAAc,yCACdH,IACC,6HAEF,CACCD,GAAc,EACdE,KAAc,UACdC,QAAc,YACdC,YAAc,gCACdH,IACC,uIAEF,CACCD,GAAc,EACdE,KAAc,QACdC,QAAc,QACdC,YAAc,yCACdH,IACC,uGAEF,CACCD,GAAc,GACdE,KAAc,SACdC,QAAc,SACdC,YAAc,qCACdH,IAAc,yFAEf,CACCD,GAAc,GACdE,KAAc,QACdC,QAAc,SACdC,YAAc,mCACdH,IAAc,oFAEf,CACCD,GAAc,GACdE,KAAc,QACdC,QAAc,WACdC,YAAc,0BACdH,IACC,2GCrDYoB,G,kBA7Bd,aAAe,IAAD,8BACb,+CAODC,WAAa,SAACC,GACb,OAAO,EAAKC,SAAS,CAAER,YAAaO,EAAEE,OAAOC,SAP7C,EAAKC,MAAQ,CACZjB,SACAM,YAAc,IAJF,E,sEAYJ,IAAD,OACFY,EAAiBC,KAAKF,MAAMjB,OAAOoB,OAAO,SAAClB,GAChD,OACCA,EAAMV,KAAK6B,cAAcC,SAAS,EAAKL,MAAMX,YAAYe,gBACzDnB,EAAMT,QAAQ4B,cAAcC,SAAS,EAAKL,MAAMX,YAAYe,iBAI9D,OACC,6BACC,kBAAC,EAAD,CAAWd,aAAcY,KAAKP,aAC9B,kBAAC,EAAD,CAAUZ,OAAQkB,S,GAzBJK,cCMEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCPNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDsH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,gB","file":"static/js/main.d47ee376.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ id, url, city, country, description }) => {\r\n\t//const { id, url, city, country, description } = props;\r\n\r\n\treturn (\r\n\t\t<div className='cardBody' style={{ backgroundImage: `url(${url})` }}>\r\n\t\t\t{/* <img className='cardBackground' alt='card landscape background' src={url} /> */}\r\n\t\t\t<div>\r\n\t\t\t\t<h2>\r\n\t\t\t\t\t{city}, {country}\r\n\t\t\t\t</h2>\r\n\t\t\t\t<p>{description}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ places }) => {\r\n\tconst cardsArray = places.map((place, i) => {\r\n\t\treturn (\r\n\t\t\t<Card\r\n\t\t\t\tkey={place.id}\r\n\t\t\t\turl={place.url}\r\n\t\t\t\tid={place.id}\r\n\t\t\t\tcity={place.city}\r\n\t\t\t\tcountry={place.country}\r\n\t\t\t\tdescription={place.description}\r\n\t\t\t/>\r\n\t\t);\r\n\t});\r\n\r\n\treturn <div className='cardDisplay'>{cardsArray}</div>;\r\n};\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n\treturn (\r\n\t\t<div className='searchHeader'>\r\n\t\t\t<h1>Search Places to Visit</h1>\r\n\t\t\t<input type='search' placeholder='Search' onChange={searchChange} />\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default SearchBox;\r\n","export const places = [\r\n\t{\r\n\t\tid          : 1,\r\n\t\tcity        : 'SÃ£o Paulo',\r\n\t\tcountry     : 'Brazil',\r\n\t\tdescription : 'For people who enjoy the hustle.',\r\n\t\turl         :\r\n\t\t\t'https://creativosbr.com/wp-content/uploads/2018/03/creativosbr-baiana-em-s%C3%A3o-paulo-opini%C3%A3o.jpg'\r\n\t},\r\n\t{\r\n\t\tid          : 2,\r\n\t\tcity        : 'Dublin',\r\n\t\tcountry     : 'Ireland',\r\n\t\tdescription : 'A great place for a pint and a chat.',\r\n\t\turl         :\r\n\t\t\t'http://www.intercambiodireto.com/blog/wp-content/uploads/2018/02/stock-photo-temple-bar-district-in-dublin-at-night-100904953-.jpg'\r\n\t},\r\n\t{\r\n\t\tid          : 3,\r\n\t\tcity        : 'Shaolin',\r\n\t\tcountry     : 'China',\r\n\t\tdescription : 'To meditate and get fit.',\r\n\t\turl         : 'https://upload.wikimedia.org/wikipedia/commons/1/13/Gyachung_Kang_at_dusk.jpg'\r\n\t},\r\n\t{\r\n\t\tid          : 4,\r\n\t\tcity        : 'Napoli',\r\n\t\tcountry     : 'Italy',\r\n\t\tdescription : 'Come for the pizza, stay for the wine.',\r\n\t\turl         : 'http://www.amromacarservice.com/wp-content/uploads/2018/05/tour-napoli1.jpg'\r\n\t},\r\n\t{\r\n\t\tid          : 5,\r\n\t\tcity        : 'Aspen',\r\n\t\tcountry     : 'United States',\r\n\t\tdescription : 'Hot chocolate and snowy mountains.',\r\n\t\turl         :\r\n\t\t\t'https://ogimg.infoglobo.com.br/in/23485925-e26-0fe/FT1086A/652/x81216460_BVAspen.jpg,qposicaoFoto1.pagespeed.ic.zL2Q3G-eLk.jpg'\r\n\t},\r\n\t{\r\n\t\tid          : 6,\r\n\t\tcity        : 'Honolulu',\r\n\t\tcountry     : 'United States',\r\n\t\tdescription : 'Whatever you want at any time',\r\n\t\turl         : 'https://blog.p2pmilhas.com.br/wp-content/uploads/2017/12/p2p-honolulu.jpg'\r\n\t},\r\n\t{\r\n\t\tid          : 7,\r\n\t\tcity        : 'Alaska',\r\n\t\tcountry     : 'United States',\r\n\t\tdescription : \"It's really cold here. Not bad, though\",\r\n\t\turl         :\r\n\t\t\t'https://img.travelawaits.com/filter:centercrop/quill/3/f/d/1/b/4/3fd1b4caf5f54c414d6ca883d03cc952f2f00c91.jpg?w=800&h=800'\r\n\t},\r\n\t{\r\n\t\tid          : 8,\r\n\t\tcity        : 'Outback',\r\n\t\tcountry     : 'Australia',\r\n\t\tdescription : 'Hunt some roos with us, mate.',\r\n\t\turl         :\r\n\t\t\t'https://media.gq.com/photos/5b991a2b3ef4233944b15bae/16:9/w_1280%2Cc_limit/gq-travel-guide-australia-outback-northern-territory.jpg'\r\n\t},\r\n\t{\r\n\t\tid          : 9,\r\n\t\tcity        : 'Delhi',\r\n\t\tcountry     : 'India',\r\n\t\tdescription : 'You never tasted food quite like this.',\r\n\t\turl         :\r\n\t\t\t'https://www.bizevdeyokuz.com/wp-content/uploads/things-to-do-in-delhi-and-ideal-itinerary-india.jpg'\r\n\t},\r\n\t{\r\n\t\tid          : 10,\r\n\t\tcity        : 'Moscow',\r\n\t\tcountry     : 'Russia',\r\n\t\tdescription : 'In soviet Russia we travel to you.',\r\n\t\turl         : 'https://upload.wikimedia.org/wikipedia/commons/0/02/Moscow-City_%2836211143494%29.jpg'\r\n\t},\r\n\t{\r\n\t\tid          : 11,\r\n\t\tcity        : 'Paris',\r\n\t\tcountry     : 'France',\r\n\t\tdescription : 'Bread, wine, cheese... I mean...',\r\n\t\turl         : 'https://ondeficaremsuaviagem.com/wp-content/uploads/2017/03/onde-ficar-paris.jpg'\r\n\t},\r\n\t{\r\n\t\tid          : 12,\r\n\t\tcity        : 'Dubai',\r\n\t\tcountry     : 'Emirates',\r\n\t\tdescription : 'A utopia on the desert.',\r\n\t\turl         :\r\n\t\t\t'https://abrilviagemeturismo.files.wordpress.com/2018/06/dubai.jpg?quality=70&strip=info&resize=680,453'\r\n\t}\r\n];\r\n","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../SearchBox';\r\nimport { places } from '../places';\r\nimport './Style.css';\r\n\r\nclass App extends Component {\r\n\t// Create state and\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tplaces,\r\n\t\t\tsearchfield : ''\r\n\t\t};\r\n\t}\r\n\r\n\tsearchText = (e) => {\r\n\t\treturn this.setState({ searchfield: e.target.value });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst searchedPlaces = this.state.places.filter((place) => {\r\n\t\t\treturn (\r\n\t\t\t\tplace.city.toLowerCase().includes(this.state.searchfield.toLowerCase()) ||\r\n\t\t\t\tplace.country.toLowerCase().includes(this.state.searchfield.toLowerCase())\r\n\t\t\t);\r\n\t\t});\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<SearchBox searchChange={this.searchText} />\r\n\t\t\t\t<CardList places={searchedPlaces} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n// MY COMPONENT! =================================\n//import Hello from './myFirstComponent/Hello'; //\n//================================================\n\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}